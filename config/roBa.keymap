#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};j

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <1 2>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <6 7>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <18 19>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        arrow_operator: arrow_operator {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GREATER_THAN>;
            label = "ARROW_OPERATOR";
        };

        namespace_operator: namespace_operator {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp COLON>;
            label = "NAMESPACE_OPERATOR";
        };

        window_left: window_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "WINDOW_LEFT";
        };

        window_right: window_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_CONTROL>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp RIGHT_CONTROL>;

            label = "WINDOW_RIGHT";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        bs_sym_td: bs_sym_td {
            compatible = "zmk,behavior-tap-dance";
            label = "BS_SYM_TD";
            #binding-cells = <0>;
            bindings = <&lt 1 BACKSPACE>, <&kp BACKSPACE>;

            tapping-term-ms = <100>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &lt 3 W        &kp E        &kp R        &kp T                                                  &kp Y            &kp U  &kp I      &kp O    &kp P
&kp A             &kp S          &kp D        &kp F        &kp G             &trans                &kp ESCAPE     &kp H            &kp J  &kp K      &kp L    &kp SEMICOLON
&mt LEFT_SHIFT Z  &kp X          &kp C        &kp V        &kp B             &kp LEFT_ALT          &kp RIGHT_ALT  &kp N            &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&kp CAPS          &kp PAGE_DOWN  &kp PAGE_UP  &lt 2 SPACE  &kp LEFT_CONTROL  &kp LEFT_COMMAND      &kp ENTER      &lt 1 BACKSPACE                             &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        SYM {
            bindings = <
&kp SQT          &kp LESS_THAN  &kp GREATER_THAN     &kp DOUBLE_QUOTES  &kp CARET                      &kp PIPE        &kp AMPERSAND  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PERCENT
&kp EXCLAMATION  &kp SLASH      &kp ASTERISK         &kp BACKSLASH      &kp HASH   &trans      &trans  &kp MINUS       &kp EQUAL      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DOLLAR
&kp TILDE        &kp GRAVE      &namespace_operator  &arrow_operator    &kp AT     &trans      &trans  &kp UNDERSCORE  &kp PLUS       &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp QUESTION
&trans           &trans         &trans               &trans             &trans     &trans      &trans  &trans                                                                      &trans
            >;
        };

        NUM {
            bindings = <
&none   &kp F7  &kp F8  &kp F9  &kp F12                                       &none   &kp N7        &kp N8        &kp NUMBER_9  &trans
&none   &kp F4  &kp F5  &kp F6  &kp F11  &kp LC(LA(KP_NUMBER_0))      &trans  &none   &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans
&none   &kp F1  &kp F2  &kp F3  &kp F10  &trans                       &trans  &none   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp N0
&trans  &trans  &trans  &trans  &trans   &trans                       &trans  &trans                                            &trans
            >;
        };

        ARROW {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans        &trans  &trans  &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &window_left  &trans  &trans  &window_right  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans        &trans  &trans  &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                       &trans
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mo 5   &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                              &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
